import { tsort } from "../../src/graph/tsort-tarjan";

import * as mocha from "mocha";
import * as chai from "chai";

const expect = chai.expect;

import { Graph } from "../../src/graph/graph";

describe("singleton tsort", () => {
  it("empty case", () => {
    const G: Graph<string> = new Graph<string>([], []);
    const items: string[] = tsort(G);
    expect(items).to.eql([]);
  });
  it("singletons", () => {
    const G: Graph<string> = new Graph<string>(["a", "b", "c"], []);
    const items: string[] = tsort(G);
    expect(items).to.eql(["c", "b", "a"]);
  });
});

describe("larger tests", () => {
  it("test 1", () => {
    const V: number[] = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24];
    const E: [number, number][] = [
      [0, 16],
      [10, 12],
      [3, 19],
      [1, 17],
      [6, 10],
      [8, 23],
      [18, 22],
      [5, 18],
      [13, 20],
      [4, 24],
    ];
    const T: number[] = [21, 15, 14, 13, 20, 11, 9, 8, 23, 7, 6, 10, 12, 5, 18, 22, 4, 24, 3, 19, 2, 1, 17, 0, 16];
    const G = new Graph<number>(V, E);
    expect(tsort(G)).to.eql(T);
  });
  it("test 2", () => {
    const V: number[] = [
      0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33,
      34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64,
      65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95,
      96, 97, 98, 99,
    ];
    const E: [number, number][] = [
      [18, 66],
      [21, 64],
      [0, 92],
      [4, 74],
      [46, 83],
      [15, 22],
      [58, 61],
      [5, 87],
      [71, 75],
      [31, 93],
      [13, 55],
      [61, 90],
      [44, 82],
      [3, 65],
      [35, 98],
      [54, 76],
      [19, 20],
      [42, 49],
      [28, 78],
      [34, 89],
      [40, 57],
      [8, 48],
      [7, 40],
      [23, 58],
      [11, 23],
      [20, 68],
      [72, 99],
      [17, 81],
      [33, 60],
      [6, 73],
      [66, 67],
      [45, 47],
      [60, 95],
      [80, 86],
      [29, 91],
      [16, 50],
      [32, 34],
      [43, 88],
      [36, 39],
      [2, 42],
      [79, 97],
      [1, 29],
      [30, 54],
      [25, 80],
      [47, 84],
      [64, 70],
      [12, 94],
      [26, 79],
      [9, 85],
    ];
    const T: number[] = [
      96, 77, 72, 99, 71, 75, 69, 63, 62, 59, 56, 53, 52, 51, 46, 83, 45, 47, 84, 44, 82, 43, 88, 41, 38, 37, 36, 39, 35, 98, 33,
      60, 95, 32, 34, 89, 31, 93, 30, 54, 76, 28, 78, 27, 26, 79, 97, 25, 80, 86, 24, 21, 64, 70, 19, 20, 68, 18, 66, 67, 17, 81,
      16, 50, 15, 22, 14, 13, 55, 12, 94, 11, 23, 58, 61, 90, 10, 9, 85, 8, 48, 7, 40, 57, 6, 73, 5, 87, 4, 74, 3, 65, 2, 42, 49, 1,
      29, 91, 0, 92,
    ];
    const G = new Graph<number>(V, E);
    expect(tsort(G)).to.eql(T);
  });
});
